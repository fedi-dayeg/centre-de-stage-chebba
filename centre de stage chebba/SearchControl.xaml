<UserControl x:Class="centre_de_stage_chebba.SearchControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:centre_de_stage_chebba"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"  Height="625" Width="1010" Loaded="UserControl_Loaded"
             >
    <Grid>
        <DataGrid
            x:Name="datagridview"
            
  Margin="0 8 0 0"
  ItemsSource="{Binding Items3}"
  CanUserSortColumns="True"
  CanUserAddRows="False"
  AutoGenerateColumns="False"
  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8">
            <DataGrid.ItemContainerStyle>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler ="DataGridRow_MouseDoubleClick"/>
                </Style>
            </DataGrid.ItemContainerStyle>

            <DataGrid.Columns>
                <DataGridTextColumn
      Binding="{Binding Code}"
      Header="Code"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                <DataGridTextColumn
      Binding="{Binding Code}"
      Header="Code"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding Name}"
      Header="Name"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding Description}"
      Header="Description"
      MaxLength="255"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding Numeric}"
      Header="Number with long header"
      Width="120"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style
          TargetType="{x:Type DataGridColumnHeader}"
          BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                            <Setter
            Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock
                  TextWrapping="Wrap"
                  Text="{Binding}"
                  TextAlignment="Right" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style
          TargetType="{x:Type TextBlock}">
                            <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:MaterialDataGridTextColumn>
                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                <materialDesign:MaterialDataGridComboBoxColumn
      Header="Food"
      SelectedValueBinding="{Binding Food}"
      ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
